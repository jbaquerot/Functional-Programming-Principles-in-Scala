package patmat

import org.scalatest.FunSuite
import common._
import patmat.Huffman._

object worksheet {
    val t1 = Fork(Leaf('a',2), Leaf('b',3), List('a','b'), 5)
    val t2 = Fork(Fork(Leaf('a',2), Leaf('b',3), List('a','b'), 5), Leaf('d',4), List('a','b','d'), 9)
		val trees = List(t1,t2)
    
    println(decodedSecret)
    
    val table = convert(t2)
    codeBits(table)('d')
    
    def quickEncode(tree: CodeTree)(text: List[Char]): List[Bit] = text match{
    	case List() => List()
    	case c::xs => codeBits(table)(c) :: quickEncode(tree)(xs)
    }
}